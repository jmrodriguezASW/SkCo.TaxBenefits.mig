#
# $Id: modeler.properties 24-jun-2005.12:05:57 quwang Exp $
#

# general
modeler.nestedModelError=modeler error: {0}

# RmiModeler
rmimodeler.cannot.instantiate=cannot instantiate class: {0}
rmimodeler.invalid.remote.interface=invalid remote interface: {0}
rmimodeler.class.not.found=class {0} not found.
rmimodeler.invalid.exception=exception \"{0}\" is unsupported.
rmimodeler.invalid.rmi.type=invalid type for JAX-RPC structure: {0}
rmimodeler.unexpected.type=unexpected type: {0}
rmimodeler.invalid.encoding=invalid encoding specified: {0}
rmimodeler.type.cannot.implement.remote=The following type is invalid because it implements java.rmi.Remote: {0}
rmimodeler.type.does.not.implement.serializable=type {0} does not implement serializable
rmimodeler.no.empty.constructor=class {0} does not have a public accessible empty constructor
rmimodeler.ambiguous.member=ambiguous member: {0}
rmimodeler.nestedRmiModelerError=RmiModeler error: {0}
rmimodeler.property.setter.method.cant.be.overloaded=property setter \"{0}\" of type \"{1}\" on class \"{2}\" cannot be overloaded
rmimodeler.must.implement.remote=\
	invalid remote interface; class {0} is not an interfacee
rmimodeler.service.endpoint.must.be.interface=\
	invalid remote interface; class {0} does not directly implement a remote interface
rmimodeler.must.throw.remoteexception=\
	{0} is not a valid remote interface: method {1} must throw java.rmi.RemoteException
rmimodeler.javabean.property.has.public.member: class \"{0}\" cannot have a JavaBean property \"{1}\" and a public member of the same name.
rmimodeler.nested.inner.classes.not.supported=nested inner classes are not supported: {0}
rmimodeler.duplicate.type.name:Duplicate type name \"{0}\" for Java type \"{1}\" found.  To remove this error do not specify a single typeNamespace for all value types or specify a mapping file.  This error could also be caused when an erroneous type has been used more than once.
rmimodeler.field.not.found=Field \"{0}\" of Java class \"{1}\" not found.
rmimodeler.type.is.used.as.two.types=Type \"{0}\" is used as a \"{1}\" and a \"{2}\"
rmimodeler.no.literal.multidimensional.arrays=Multi-dimensional arrays are not supported in document literal mode - Type: \"{0}\"
rmimodeler.no.literal.interfaces=Interfaces or abstract classes are not supported in document literal mode - Type: \"{0}\"
rmimodeler.type.is.not.supported={0} types are not supported in document literal mode - Type: \"{1}\"
rmimodeler.type.implements.more.than.one.interface=Type \"{0}\" implements more than one interface, interfaces: \"{1}\", \"{2}\" ...
rmimodeler.type.references.bad.type=The type {0} is invalid because it references this type {1} which is invalid for the following reason(s):\n{2}
rmimodeler.type.targetnamespace.ignored=Ignoring target namespace for schema: \"{0}\", WSDL target namespace is used for the value types in the same package as Service Endpoint: \"{1}\"
rmimodeler.bare.void.return=Forcing operation {0} to be one way because empty body responses are not supported in document literal bare.
rmimodeler.ambiguous.ctor.params=The constructor for {0} has {1} arguments of type {2}; This ambiguity may result in unexpected behavior. Use a mapping file to guarantee correctness.
rmimodeler.exception.must.not.extend.type=Service-specific exception {0} is not allowed to extend {0}.
rmimodeler.exception.must.not.implement.type=Service-specific exception {0} is not allowed to implement {0}.
rmimodeler.found.suitable.ctor=Found a suitable parameterized constructor for {0}.
rmimodeler.not.found.suitable.ctor=Did not find a suitable parameterized constructor for {0}.
rmimodeler.found.default.ctor.and.setters=Found a default constructor and a setter for every member of {0}.
rmimodeler.using.single.string.ctor=Using the single java.lang.String parameter constructor for {0}.
rmimodeler.no.members.found=Since no members could be found for {0}, the default constructor will be used for deserialization.
# WSDLModeler
wsdlmodeler.case.conflicting.operation.name=Operation Name {0} is unique only by case.
wsdlmodeler.multipleOutputParameters=multiple \"out\" parameters in operation: {0}
wsdlmodeler.invalidOperation=invalid operation: {0}
wsdlmodeler.invalidState.modelingOperation=invalid state while modeling operation: {0}
wsdlmodeler.resultIsInOutParameter=result is \"inout\" parameter in operation: {0}
wsdlmodeler.invalid.parameterorder.parameter=\"{0}\" specified in the parameterOrder attribute of message \"{1}\" is not a valid part of the message.
wsdlmodeler.invalid.parameterOrder.tooManyUnmentionedParts=more than one part left out in the parameterOrder attribute of operation \"{0}\"
wsdlmodeler.invalid.parameter.differentTypes=parameter \"{0}\" of operation \"{1}\" appears with different types in the input and output messages
wsdlmodeler.invalid.bindingOperation.messageMissing=in binding operation \"{0}\" the message \"{1}\" referenced for the header does not exist
wsdlmodeler.invalid.bindingOperation.notInPortType=in binding \"{1}\", operation \"{0}\" does not appear in the corresponding port type
wsdlmodeler.invalid.bindingOperation.inputMissingSoapBody=input message of binding operation \"{0}\" does not have a SOAP body extension
wsdlmodeler.invalid.bindingOperation.outputMissingSoapBody=output message of binding operation \"{0}\" does not have a SOAP body extension
wsdlmodeler.invalid.bindingOperation.missingInputName=binding operation \"{0}\" must specify a name for its input message
wsdlmodeler.invalid.bindingOperation.missingOutputName=binding operation \"{0}\" must specify a name for its output message
wsdlmodeler.invalid.bindingOperation.multipleMatchingOperations=in binding \"{1}\", operation \"{0}\" does not reference a unique operation in the corresponding port type
wsdlmodeler.invalid.bindingOperation.notFound=in binding \"{1}\", operation \"{0}\" does not match any operation in the corresponding port type
wsdlmodeler.invalid.bindingOperation.inputSoapBody.missingNamespace=input message of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.outputSoapBody.missingNamespace=output message of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.inputHeader.missingNamespace=input header \"{1}\" of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingOperation.outputHeader.missingNamespace=output header \"{1}\" of binding operation \"{0}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingFault.notUnique=fault \"{0}\" in operation \"{1}\" matches more than one fault in the corresponding port type operation
wsdlmodeler.invalid.bindingFault.notFound=fault \"{0}\" in operation \"{1}\" does not match any fault in the corresponding port type operation
wsdlmodeler.invalid.bindingFault.outputMissingSoapFault=fault \"{0}\" in operation \"{1}\" does not have a SOAP fault extension
wsdlmodeler.invalid.bindingFault.missingName=fault \"{0}\" in operation \"{1}\" must specify a value for the \"name\" attribute
wsdlmodeler.invalid.bindingFault.missingNamespace=fault \"{0}\" in operation \"{1}\" must specify a value for the \"namespace\" attribute
wsdlmodeler.invalid.bindingFault.emptyMessage=fault \"{0}\" refers to message \"{1}\", but the message has no parts
wsdlmodeler.invalid.bindingFault.messageHasMoreThanOnePart=fault \"{0}\" refers to message \"{1}\", but the message has more than one parts
wsdlmodeler.invalid.message.partMustHaveTypeDescriptor=in message \"{0}\", part \"{1}\" must specify a \"type\" attribute
wsdlmodeler.invalid.message.partMustHaveElementDescriptor=in message \"{0}\", part \"{1}\" must specify an \"element\" attribute
wsdlmodeler.invalid.message.partMustHaveTypeOrElementDescriptor=in message \"{0}\", part \"{1}\" must specify a \"type\" or \"element\" attribute
wsdlmodeler.invalid=invalid WSDL document
wsdlmodeler.wsdllocation.null=null WSDL location
wsdlmodeler.unsolvableNamingConflicts=the following naming conflicts occurred:\n {0}
wsdlmodeler.unknown.dime.layout=Unsupported DIME layout: {0}
wsdlmodeler.dime.encoded.only=DIME extension to WSDL is only supported for encoded operations
wsdlmodeler.invalid.binding.mixAttachemntTypes=binding \"{0}\" uses both streaming attachments and mime-multipart
wsdlmodeler.invalid.binding.mixStreamAndDime=binding \"{0}\" uses both streaming attachments and DIME
wsdlmodeler.no.porttype=<portType> definition is not found in the WSDL
ioexception.collecting.schemas= IO error in processing schemas: {0}
wsdlmodeler.invalid.serviceInterface=The value of service-interface {0} MUST be package qualified. It is changed to {1}.
#
wsdlmodeler.warning.ignoringUnrecognizedSchemaExtension=ignoring schema element (unsupported version): {0}
wsdlmodeler.warning.searchSchema.unrecognizedTypes=encountered {0} unrecognized type(s)
wsdlmodeler.warning.searchSchema.unrecognizedType=unrecognized type encountered: {0}
wsdlmodeler.warning.searchSchema.unrecognizedTypeException=exception occurred while processing type {0}, {1}
wsdlmodeler.warning.noServiceDefinitionsFound=WSDL document does not define any services
wsdlmodeler.warning.noPortsInService=Service \"{0}\" does not contain any usable ports
wsdlmodeler.warning.noOperationsInPort=Port \"{0}\" does not contain any usable operations
wsdlmodeler.warning.ignoringNonSOAPPort=ignoring port \"{0}\": because it references \"{1}\" that does not contain a SOAP Binding.  Only soap:binding is supported.
wsdlmodeler.warning.ignoringNonSOAPPort.noAddress=ignoring port \"{0}\": no SOAP address specified
wsdlmodeler.warning.ignoringSOAPBinding.unrecognizedTransport:ignoring SOAP port \"{0}\": unrecognized transport
wsdlmodeler.warning.ignoringOperation.notSupportedStyle=ignoring operation \"{0}\": not request-response or one-way
wsdlmodeler.warning.ignoringOperation.notEncoded=ignoring RPC-style operation \"{0}\": parameters are not encoded
wsdlmodeler.warning.ignoringOperation.cannotHandleBodyPartsAttribute=ignoring operation \"{0}\": cannot handle \"parts\" attribute of \"soap:body\" element
wsdlmodeler.warning.ignoringOperation.cannotHandleTypeMessagePart=ignoring operation \"{0}\": message part does not refer to a schema element declaration or refers to a schema type declaration without specifiying the name attribute.
wsdlmodeler.warning.ignoringOperation.cannotHandleDocumentStyle=ignoring operation \"{0}\": cannot handle document-style operations
wsdlmodeler.warning.ignoringFaults=ignoring faults declared by operation \"{0}\"
wsdlmodeler.warning.ignoringFault.notEncoded=ignoring literal fault \"{0}\" of binding operation \"{1}\"
wsdlmodeler.warning.ignoringFault.encoded=ignoring encoded fault \"{0}\" of binding operation \"{1}\"
wsdlmodeler.warning.ignoringHeader=ignoring header \"{0}\" of binding operation \"{1}\". This header must be mapped to a parameter using a jaxrpc mapping file or the information in the header will be ignored at runtime.
wsdlmodeler.warning.ignoringHeader.notLiteral=ignoring header \"{0}\" of binding operation \"{1}\": not literal
wsdlmodeler.warning.ignoringHeader.notEncoded=ignoring header \"{0}\" of binding operation \"{1}\": not SOAP-encoded
wsdlmodeler.warning.ignoringHeader.encoded=ignoring header \"{0}\" of binding operation \"{1}\":  not literal
wsdlmodeler.warning.ignoringHeader.inconsistentDefinition=ignoring header \"{0}\" of operation \"{1}\": its type is not constant across all operations in this port
wsdlmodeler.warning.ignoringHeader.noSuchPart=ignoring header \"{0}\" of operation \"{1}\": part not found in message specified
wsdlmodeler.warning.ignoringMIMEPart.noMessagePart=ignoring MIME part \"{0}\" of operation \"{1}\": either the part was not found in the specified message or the "mimePartToParameter" flag was set to false.
wsdlmodeler.warning.ignoringValueTypePackagePrefix=value type package prefix is ignored for the types defined in the schema that has same target namespace as the target namespace of wsdl: \"{0}\"
wsdlmodeler.warning.ignoringSOAPBinding.nonHTTPTransport=binding \"{0}\" is ignored because it has an invalid attribute: transport=\"{1}\"
#
wsdlmodeler.warning.ignoringOperation.notLiteral=ignoring document-style operation \"{0}\": parameters are not literal
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInInputMessage=ignoring operation \"{0}\": input message with multiparts is not WS-I compliant and is not currently supported
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyInputMessage=ignoring operation \"{0}\": input message is empty
wsdlmodeler.warning.ignoringOperation.cannotHandleMoreThanOnePartInOutputMessage=ignoring operation \"{0}\": output message with multiparts is not WS-I compliant and is not currently supported
wsdlmodeler.warning.ignoringOperation.cannotHandleEmptyOutputMessage=ignoring operation \"{0}\": output message is empty
wsdlmodeler.warning.ignoringFault.documentOperation=ignoring fault \"{0}\" of document-style operation \"{1}\"
wsdlmodler.warning.operation.use=The WSDL used has operations with literal and encoded use. -f:searchschema is not supported for this scenario.

wsdlmodeler.duplicate.fault.part.name=ignoring fault \"{0}\" of operation \"{1}\", part name \"{2}\" is not unique
wsdlmodeler.warning.failedToMakeUnique=failed to generate unique artifact : \"{0}\" : because of : \"{1}\"
wsdlmodeler.notification.unsupported=Notification operation \"{0}\" in binding \"{1}\" is not supported.
#wsi warnings
wsdlmodeler.warning.nonconforming.wsdl.import=Non conforming WSI WSDL used for wsdl:import
wsdlmodeler.warning.nonconforming.wsdl.types=Non conforming WSI WSDL used for wsdl:types

# optional parts
wsdlmodeler.error.partsNotFound=parts \"{0}\" not found in the message \"{1}\", wrong WSDL

# Custom mappings for rpc-encoded web-service is not supported
wsdlmodeler.warning.rpc.encoded.CustomMappingNotSupported=Custom mappings for rpc-encoded web service is not supported (operation = \"{0}\").

# NoMetadataModeler
nometadatamodeler.error.noServiceDefinitionsFound=WSDL document does not define any services
nometadatamodeler.error.moreThanOneServiceDefinition=WSDL document defines more than one service
nometadatamodeler.error.incorrectServiceName=incorrect service name: \"{0}\"
nometadatamodeler.error.failedToProcessPort=failed to process port: \"{0}\"
nometadatamodeler.error.noPortsInService=service does not define any ports: \"{0}\"
nometadatamodeler.error.moreThanOnePortDefinition=service defines more than one port: \"{0}\"
nometadatamodeler.error.incorrectPortName=incorrect port name: \"{0}\"
nometadatamodeler.error.overloadedOperationsFound=port contains overloaded operations: \"{0}\"
nometadatamodeler.error.operationNotEncoded=operation is not SOAP-encoded: \"{0}\"
nometadatamodeler.outputParameterEncountered=operation requires output parameter(s): \"{0}\"
nometadatamodeler.error.incorrectFaultPartName=incorrect fault part name for fault \"{1}\" of operation \"{0}\": \"{2}\"
nometadatamodeler.error.incorrectFaultPartType=incorrect fault part type for fault \"{1}\" of operation \"{0}\": \"{2}\"
nometadatamodeler.duplicateMethodSignature=duplicate method signature encountered: \"{0}\"
nometadatamodeler.error.classNotFound=class not found: {0}
nometadatamodeler.error.cannotMapNamespace=cannot map namespace URI: \"{0}\"
nometadatamodeler.error.methodNotFound=method \"{0}\" not found (or found with incorrect signature) in class: \"{1}\"
nometadatamodeler.error.constructorNotFound=constructor not found (or found with incorrect signature) in class: \"{0}\"
nometadatamodeler.error.exceptionNotFound=method \"{0}\" should throw exception: \"{0}\"
nometadatamodeler.error.notServiceInterface=not a Service interface: \"{0}\"
nometadatamodeler.error.notRemoteInterface=not a Remote interface: \"{0}\"
nometadatamodeler.error.holderDetected=holder types are invalid in this context
nometadatamodeler.error.nestedArrayDetected=nested array types are invalid in this context
