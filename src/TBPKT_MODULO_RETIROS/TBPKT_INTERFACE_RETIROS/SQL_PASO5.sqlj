package TBPKT_MODULO_RETIROS.TBPKT_INTERFACE_RETIROS;

import sqlj.runtime.*;
import sqlj.runtime.ref.*;
import java.sql.*;
import java.io.*;

//import TBPKT_UTILIDADES.TBPKT_CONEXIONBASEDATOS.*;

import TBPKT_UTILIDADES.TBPKT_VALOR_UNIDAD.*;
import com.ibm.as400.access.*;

/**
 * clase: SQL_PASO5
 * Procedimientos:
 *    1. TBP_PASO5: Controla el paso 5 de las Interfaces de Retiros,
 *       el cual debe generar todas las solicitudes de retiros
 *       correspondientes al proceso del dia con el valor de unidad
 *       correspondiente
 * @author: Ing. Dolly Marcela Padilla Baños
 */
public class SQL_PASO5 extends Object {

  //Interector o cursor de la tabla TBRETIROS con los campos seleccionados
  #sql public static iterator vint_retiro (String ret_con_pro_codigo, String ret_con_numero, String fecha_contrato, String fecha_unidad);

  public static void TBP_PASO5(int v_veces, int v_proceso) {
    int               v_cod_err         = 0;
    String            v_men_err         = " ";
    String            v_sistema         = " ";
    String            v_usuario         = " ";
    String            v_password        = " ";
    String            v_libreria        = " ";
    String            fe;
    String            v_ejecutar         = "N";
    String            v_menvu           = "";
    int               v_codvu            = 0;
    Integer           v_fecha_control   = null;
    int               v_cont            = 1;
    int               v_consecutivo_log  = 0;
    long              y;
    String            v_valido          = "N";
    String            v_proceso_exitoso = "N";
    String            v_fecha_c = " ";
    String            v_fecha_contrato;
    String            v_fecha_unidad;
    vint_retiro       vreg_retiro       = null;
    double[]          v_vector;
    String[]          v_valusu;

    //TBCL_Validacion   i_valusu = new TBCL_Validacion(); //Quitar MOS

    TBCL_AS400        ias400;
    AS400             as400;
    int               v_sw = 1;
    int               v_existe_paso = 0;
    String v_unidad_total = "";
    String v_estado_paso  = "N";
    String            v_log_datos = " ";
    String v_ruta = "c:\\TaxBenefits\\Taxb\\Pasos_logs\\paso5.log";

    try{

/* Modificacion:

Se deja en comentarios la seccion de conexion a la base de datos, ya que esta clase
se envia al esquema tbenefit en la base de datos.

Conexion con la base de datos Oracle*
    v_valusu = new String[3];
    v_valusu = i_valusu.TBFL_ValidarUsuario();
    DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
    Connection t_tax =DriverManager.getConnection(v_valusu[0],v_valusu[1],v_valusu[2]);
      DefaultContext ctx3 = new DefaultContext(v_valusu[0],v_valusu[1],v_valusu[2],false);
      DefaultContext.setDefaultContext(ctx3);
      t_tax.setAutoCommit(false);
    
      
//Quitar MOS
//Final de modificacion */
      
      PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(v_ruta, true)));
      DefaultContext.setDefaultContext(null);

      //*********************************************************
      //El paso 5 se debe ejecutar las veces que sean necesarios
      //debido a que los valores brutos del paso 4 pueden cambiar
      //en tal caso se debe volver a correr el paso 5
      //**********************************************************
      #sql {call TBPBD_CRONE_LOG('5',
                                 :OUT   v_ejecutar,
                                 :OUT   v_consecutivo_log,
                                 :INOUT v_cod_err,
                                 :INOUT v_men_err)};
      out.println("v_ejecutar "+v_ejecutar);
      out.println("v_consecutivo "+v_consecutivo_log);
      if (v_cod_err == 0){
        //*************************************************
        //Verificar si paso 5 se puede ejecutar
        //*************************************************
        while ((v_proceso_exitoso == "N") && (v_cont <= v_veces)) {
          v_cod_err = 0;
          v_men_err = " ";
          #sql {call TBPBD_INTERF_RET_GRAL('5',
                                           :OUT   v_fecha_control,
                                           :OUT   v_valido,
                                           :v_veces,
                                           :INOUT v_cod_err,
                                           :INOUT v_men_err)};
          out.println("v_cod_err  de TBPBD_INTERF_RET_GRAL "+v_cod_err);
          if (v_cod_err == 0){
            v_fecha_c = v_fecha_control.toString();
            v_proceso_exitoso = "S";
          }
          else{
            v_proceso_exitoso = "N";
            v_cont            = v_cont + 1;
          }
        }//Mientras verificacion de paso 5 no es exitosa
        //*************************************************
        //Si paso 5 se puede ejecutar
        //*************************************************
        out.println("v_valido "+v_valido);
        if (v_valido.equals("S")){
          //**************************************************************
          //Buscar en la tabla de control en que proceso se debe iniciar
          //el paso 5
          //**************************************************************
          #sql v_proceso = { values (TBFBD_BUSCAR_PROCESO( '5',
                                                          :v_fecha_control,
                                                          :INOUT v_cod_err,
                                                          :INOUT v_men_err))};
          out.println("Proceso "+v_proceso);
          out.println(" v_cod_err en TBFBD_BUSCAR_PROCESO "+ v_cod_err);
          if ( v_cod_err == 0 ){
            //*****************************************************************
            //Si el proceso a ejecutar es el 0 significa que en una ejecucion
            //anterior se corrio todo el paso 5 y se debe correr nuevamente
            //debido a que el valor de la unidad en el paso 4 cambió
            //Se debe borrar la tabla del Log para correr nuevamente el paso 5
            //Ademas se debe borrar la tabla temporal de retiros de Tax
            //******************************************************************
            if (v_proceso == 0){//proceso 0
              v_proceso         = 1;
              v_consecutivo_log = 0;//se coloca consecutivo en 0 por que se borraran todas las tablas
              #sql  { DELETE tbinterface_logs
                         WHERE inl_interface = 'EG'
                           AND inl_fecha     = TO_DATE(TO_CHAR(:v_fecha_control),'RRRR-MM-DD')
                           AND (inl_paso      LIKE '5%' OR  inl_paso      = 'VU' )};
              out.println("Borrado tbinterface_logs");
              #sql  { DELETE tbinterface_retiros
                        WHERE inr_fecha     = TO_DATE(TO_CHAR(:v_fecha_control),'RRRR-MM-DD')
                          AND inr_paso      = '5' };
              out.println("Borrado tbinterface_retiros");


              #sql { call TBPBD_BORRAR_VALOR_UNIDAD( :v_fecha_control
                                                     ,:v_codvu
                                                     ,:v_menvu )

                    };

                    
              #sql  { DELETE tbinterface_aportes
                       WHERE INA_FECHA  = TO_DATE(TO_CHAR(:v_fecha_control),'RRRR-MM-DD')
                        AND  INA_PASO   = '5' };
              out.println("Borrado tbinterface_aportes");
              #sql  {COMMIT};
              out.println("Borrado TBPBD_BORRAR_VALOR_UNIDAD");
              #sql  { DELETE ajkmcpp@mfund };
              #sql  {COMMIT};
              out.println("Borrado ajkmcpp");
              #sql  { DELETE ajklcpp@mfund };
              #sql  {COMMIT};
             // #sql  {alter session close DATABASE LINK mfund};
              out.println("Borrado ajklcpp");
            }//Si el proceso a ejecutar es 0


            /************  proceso 1 insertar en tabla de control********************/
             if(v_proceso == 1)
             {//proceso 1
               v_proceso_exitoso = "N";
               v_cont            = 1;
               while ((v_proceso_exitoso.equals("N")) && (v_cont <= v_veces))
               {
                v_cod_err = 0;
                v_men_err = " ";
                #sql {call TBPBD_PASO5(:v_fecha_control,
                                       :INOUT v_proceso,
                                       :INOUT v_cod_err,
                                       :INOUT v_men_err)};
                out.println("v_cod_err en  TBPBD_PASO5"+v_cod_err);

                if (v_cod_err == 0)
                  v_proceso_exitoso = "S";
                else
                 v_cont = v_cont + 1;
              }//Mientras proceso no se realice exitosamente
             }// proceso 1


            /**************************fin proceso1 *********************************************/
            //*************************************************
            //Conexion al AS400. Buscar elementos de conexion
            // al As400 en referencias
            //*************************************************
            #sql v_sw = { values(TB_FREFERENCIAS_MULTI(:INOUT v_sistema,
                                                       :INOUT v_usuario,
                                                       :INOUT v_password,
                                                       :INOUT v_libreria ))};

            if (v_sw == 0){
              //Conectarse al AS400
              as400 = new AS400(""+v_sistema+"");
              try{
                //se conecta con usuario y password
                as400.setUserId(""+v_usuario+"");
                as400.setPassword(""+v_password+"");
              }//Hubo error al conectarse al AS400
              catch (Exception e){
                out.println("Error al conectarse al As400 "+e);
                v_cod_err = -1;
              }//Hubo error al conectarse al AS400
              out.println("v_cod_err despues de conexion as "+v_cod_err);
              if (v_cod_err == 0){
                //*************************************************
                //Proceso 2: Calcular el valor de unidad de los
                //retiros a procesar en este paso
                //*************************************************

                if (v_proceso == 2 ){
                  v_proceso_exitoso = "N";
                  v_cont            = 1;
                  while ((v_proceso_exitoso.equals("N")) && (v_cont <= v_veces)) {
                    v_cod_err = 0;
                    v_men_err = " ";
                    //Calcular el valor de unidad para los retiros a procesar e insertarlos en TBSALDOS
                    /*#sql vreg_retiro = {SELECT DISTINCT ret_con_pro_codigo,
                                                        ret_con_numero,
                                                        TO_CHAR(ret_fecha_efectiva,'RRRRMMDD') AS fecha_contrato,
                                                        TO_CHAR(ret_fecha_efectiva-1,'RRRRMMDD') AS fecha_unidad
                                          FROM  tbretiros
                                          WHERE ret_fecha_proceso = TO_DATE(TO_CHAR(:v_fecha_control),'RRRR-MM-DD')
                                            AND ret_ref_estado IN ( 'SER014', 'SER015', 'SER016', 'SER017')
                                          ORDER BY ret_con_pro_codigo, ret_con_numero};
                    while (vreg_retiro.next() ){
                      //Si la fecha efectiva del retiro es menor a la fecha de proceso (Back Date)
                      //Calcular el valor de unidad con fecha de contrato y unidad iguales a la
                      //fecha efectiva. En caso contrario calcular el valor de unidad con fecha
                      //de contrato igual a la fecha efectiva y fecha de unidad con fecha efectiva
                      //menos 1 para no tomar las transacciones del dia
                      fe = vreg_retiro.fecha_contrato();
                      if ( fe.compareTo(v_fecha_c) < 0 ){
                        v_fecha_contrato = vreg_retiro.fecha_contrato();
                        v_fecha_unidad   = vreg_retiro.fecha_contrato();
                      }
                      else{
                        v_fecha_contrato = vreg_retiro.fecha_contrato();
                        v_fecha_unidad   = vreg_retiro.fecha_unidad();
                      }
                      out.println("caso 1017 sin P v_fecha_contrato "+v_fecha_contrato);
                      out.println("caso 1017 sin P v_fecha_unidad "+v_fecha_unidad);
                     v_vector = SQL_CALCULO_VALOR_UNIDAD.TBF_CALCULO_VALOR_UNIDAD_P(v_fecha_contrato,
                                                                                v_fecha_unidad,
                                                                                     vreg_retiro.ret_con_numero(),
                                                                                     vreg_retiro.ret_con_pro_codigo(),
                                                                                     true,
                                                                                     as400,
                                                                                     v_libreria);
                      y = Math.round(v_vector[2]);
                      if ( y == -4.0 ){
                        v_log_datos = "Contrato: "+vreg_retiro.ret_con_numero()+"Producto: "+vreg_retiro.ret_con_pro_codigo()+
                                      "Fecha Contrato: "+v_fecha_contrato+
                                      "Fecha Unidad: "+v_fecha_unidad;
                        //MODIFICACION HECHA POR APC 2004/03/09 SE CREA UNA VARIABLE STRING PARA MANDARLA COMO PARAMETRO 
                        String v_prod_codigo = vreg_retiro.ret_con_pro_codigo();
                        #sql { call TBPBD_INS_TBINTERFACE_LOGS('EG'
                                                               ,TO_DATE(:v_fecha_contrato,'RRRR-MM-DD')
                                                               ,'VU'
                                                               ,'Excepcion en TBF_CALCULO_VALOR_UNIDAD_P paila'
                                                               ,:v_log_datos
                                                               ,:v_prod_codigo
                                                               ,null)};
                        #sql {COMMIT};
                      }
                      v_cod_err = 0;
                      v_men_err = " ";
                    }//Mientras se calcula el valor de la unidad de los retiros a procesar en paso 5
                    --*/
                    #sql {call TBPBD_INSERTARSALDOSRETIROS(TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                           :INOUT v_cod_err,
                                           :INOUT v_men_err)};
                    //vreg_retiro.close();

                    if (v_cod_err != 0 ){
                      #sql {ROLLBACK};
                      v_cont            = v_cont + 1;
                      v_proceso_exitoso = "N";
                    }
                    else{
                      #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                             TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                             '53',
                                                             'Proceso 2: Calculo de Valor de Unidad para retiros a procesar exitoso',
                                                             'XXXXX',
                                                             'XXXXX',
                                                              null )};
                      v_proceso_exitoso = "S";
                      v_proceso          = 3;
                      #sql {COMMIT};
                    }
                  }//Mientras calculo del valor de unidad no se realice exitosamente

                }//Proceso 2

                //****************************************************************************
                //Proceso 3: Informar a MultifunD que el paso 5 esta en proceso.
                //Además realiza los procesos siguientes del paso 5 si proceso 2 fue exitoso
                //****************************************************************************
                out.println("v_proceso "+v_proceso);
                if ((v_proceso >= 3) && (v_proceso < 9))  {
                  v_proceso_exitoso = "N";
                  v_cont            = 1;
                  while ((v_proceso_exitoso.equals("N")) && (v_cont <= v_veces)) {
                    v_cod_err = 0;
                    v_men_err = " ";
                    out.println("va a llamar paso5");
                    out.println("v_fecha_control "+v_fecha_control);
                    out.println("v_proceso "+v_proceso);
                    out.println("v_codigo "+v_cod_err);
                    out.println("v_men_err "+v_men_err);
                    #sql {call TBPBD_PASO5(:v_fecha_control,
                                           :INOUT v_proceso,
                                           :INOUT v_cod_err,
                                           :INOUT v_men_err)};
                    out.println("llamo paso5");
                    out.println("Mensaje de error en paso5 " + v_men_err + ", codigo de error " + v_cod_err);
                    if (v_cod_err == 0){
                      v_proceso_exitoso = "S";
                      v_proceso          = 9;
                    }
                    else{
                      v_cont = v_cont + 1;
                      v_proceso_exitoso = "N";
                    }
                  }//Mientras proceso no se realice exitosamente
                }//Proceso =3
                //*************************************************
                //Proceso 9: Llamar Procedimiento del AS400
                //*************************************************
                if (v_proceso == 9)
                 {
                  // Se debe determinar si el proceso 9 se esta ejecutando como parte de un reintento o a
                  // continuacion del proceso 8.  En el primer caso se debe insertar un registro en la
                  // tabla de control (Paso 5 en YES) ya que la terminación anormal anterior lo borro.
                  // En el segundo caso se debe seguir con la ejecucion normal.

                  // Se consulta el codigo de la unidad Total en la Tabla de Referencias
                  #sql v_unidad_total = { values(TBFBD_TBREFERENCIAS( 'UUP099',
                                                                      :INOUT v_cod_err,
                                                                      :INOUT v_men_err ))};


                  if( v_cod_err == 0 ) // si no hubo error
                   // Se consulta si existe el paso 5 en la tabla de control.
                   { #sql v_existe_paso = { values(TBFBD_EXISTE_PASO( 5,
                                                                    :v_fecha_control,
                                                                    :v_unidad_total,
                                                                    :INOUT v_cod_err,
                                                                    :INOUT v_men_err ))};

                   if (v_cod_err == 0) // si no hubo error
                   {
                     if (v_existe_paso == 0) // El paso 5 no existe
                     {
                       // Inserta en la tabla de control paso 5 en YES
                       #sql {call TBPBD_INS_AJKPCPP(:v_fecha_control,
                                                    'EG',
                                                    :v_unidad_total,
                                                    5,
                                                    'Y',
                                                    :INOUT v_cod_err,
                                                    :INOUT v_men_err )};

                      if(v_cod_err == 0 ) // si no hubo error
                      {
                        #sql {COMMIT};
                        v_existe_paso = 5;
                        v_estado_paso = "Y";
                      }
                     }
                     else  // El paso 5 ya existe
                     {
                        // Se verifica que el paso 5 este es estado YES.
                        #sql v_estado_paso = { values(TBFBD_ESTADO_PASO( 5,
                                                                        :v_fecha_control,
                                                                        :v_unidad_total,
                                                                        :INOUT v_cod_err,
                                                                        :INOUT v_men_err ))};
                     }//existe paso
                   }//codigo de error
                  }//codigo erro uni
                  if(v_existe_paso == 5 && v_estado_paso.equals("Y")) // El paso 5 existe en YES
                  {
                   if (v_sw == 0)
                   {//0
                    //*******************************************************************
                    //Llamado al paso 6 de la interfaz de retiros. Se llama una funcion
                    //que ejecuta el paso 6 del AS400 la cual retorna:
                    // 0: Si corrio el paso 6
                    // -1: Si hubo una excepcion
                    // -2: Si no corrio el paso 6
                    //*******************************************************************
                    try
                    {
                     ias400 = new TBCL_AS400();
                     v_cod_err = ias400.TBF_PASO6(v_fecha_c, as400, v_libreria);
                    }
                    catch(Exception e){ v_cod_err = -3;}
                    if (v_cod_err == 0 )
                    {//1
                     #sql {COMMIT};
                     #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                           TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                           '50',
                                                           'Proceso 9: Paso 6 se pudo llamar',
                                                           'XXXXX',
                                                           'XXXXX',
                                                           null )};
                    }//1
                    else
                    {//1
                     if (v_cod_err == -1){v_men_err = "Excepcion en el Paso 6 TBF_PASO6";}
                     if (v_cod_err == -2){v_men_err = "No corrio el Paso 6";}
                     if (v_cod_err == -3){v_men_err = "Excepcion en el llamado del Paso 6 TBP_PASO5";}
                     String v_men_paso6 = "Error Proceso 9: Paso 6 "+v_men_err;
                     #sql {COMMIT};
                     #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                           TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                           '5',
                                                           :v_men_paso6,
                                                           'XXXXX',
                                                           'XXXXX',
                                                           null )};
                     }//1
                   }//No hubo error al Seleccionar de parametros de Multifund 0
                  }//
                  else
                  {
                      #sql {COMMIT};
                     #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                           TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                           '5',
                                                           'Error proceso 9: El Paso 5 del registro de control esta en estado N.',
                                                           'XXXXX',
                                                           'XXXXX',
                                                           null )};

                  }
                }//Proceso = 9
                //*************************************************
                //Desconectarse del AS400
                //*************************************************
                as400.disconnectService(AS400.COMMAND);
              }//No hubo error al conectarse al AS400
            }//No hubo error al buscar los elementos de conexion en TBREFERENCIAS
          }//No hubo error al buscar proceso del paso 5
          //*************************************************
          //informar en el Log que el Paso 5 se ejecutó
          //*************************************************
          if (v_cod_err == 0)
          {
            //Si el paso 5 fue valido y no hubo error en el proceso informarlo como
            //finalizado exitosamente para que el crone no lo vuelva a ejecutar
            out.println("Valido y no error exitoso");
            if (v_consecutivo_log == 0)
            {
              #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                    TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                    '5',
                                                    'TASK SCHEDULE: EXITOSO',
                                                    'XXXXX',
                                                    'XXXXX',
                                                    null )};
              #sql {COMMIT};
            }
            else
            {
              #sql {call TBPBD_UPDATE_TBINTERFACE_LOGS( :v_fecha_control,
                                                        '5',
                                                        :v_consecutivo_log,
                                                        'TASK SCHEDULE: EXITOSO')};
              #sql {COMMIT};
            }
          }//No hubo error en la ejecucion del paso 5
          else
          {
            //Si el paso 5 fue valido y hubo error en el proceso informarlo como
            //error para que el crone lo vuelva a ejecutar
            if (v_consecutivo_log == 0)
            {
              #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                    TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                    '5',
                                                    'TASK SCHEDULE: FALLO',
                                                    'XXXXX',
                                                    'XXXXX',
                                                    null )};
              #sql {COMMIT};
            }
            else
            {
              #sql {call TBPBD_UPDATE_TBINTERFACE_LOGS( :v_fecha_control,
                                                        '5',
                                                        :v_consecutivo_log,
                                                        'TASK SCHEDULE: FALLO')};
              #sql {COMMIT};
            }
            //Borrar en la tabla de control el paso 5 para que la validacion en el proximo
            //intento sea correcta.
            #sql { DELETE ajkpcpp@mfund
                     WHERE kpgldz = :v_fecha_control
                       AND kpqgnu = 5
                       AND kpvvsz = 'EG' };
            #sql {COMMIT};
            out.println("Borro");
          }//Hubo error en la ejecucion del paso 5
        }//Fue valido ejecutar paso 5
        else{
          //*************************************************
          //informar en el Log que el Paso 5 no se ejecutó
          //*************************************************
          out.println("No Valido ejecutar");

          /*if (v_consecutivo_log == 0){
            #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                  TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                  '5',
                                                  'TASK SCHEDULE: FALLO',
                                                  'XXXXX',
                                                  'XXXXX',
                                                  null )};
            #sql {COMMIT};
          }
          else{
            #sql {call TBPBD_UPDATE_TBINTERFACE_LOGS( :v_fecha_control,
                                                      '5',
                                                      :v_consecutivo_log,
                                                      'TASK SCHEDULE: FALLO')};
            #sql {COMMIT};
          }*/
        }//Si no fue valido ejecutar paso 5
      }//No hubo error al verificar si se puede ejecutar el crone
      out.close();
    }
    catch (Exception e)
    {
     String v_error = e.toString();
     try
     {
       PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("c:\\TaxBenefits\\Taxb\\Pasos_logs\\paso5.log", true)));
       out.println("Error Paso 5 "+e );
       #sql {call TBPBD_INS_TBINTERFACE_LOGS('EG',
                                                  TO_DATE(:v_fecha_control,'RRRR-MM-DD'),
                                                  '5',
                                                  'TASK SCHEDULE: FALLO '||:v_error,
                                                  'XXXXX',
                                                  'XXXXX',
                                                  null )};
       #sql {COMMIT};
       out.close();
       }
      catch (Exception e1)
      {
        try
        {
          PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("c:\\TaxBenefits\\Taxb\\Pasos_logs\\paso5.log", true)));
          out.println("Execption  en paso5 - Se necesita recuperacion manual "+ e1);
          out.close();
        }
        catch (Exception e2)
        {
          e2.printStackTrace();
        }
      }
    }
  }//Procedimiento TBP_PASO5
}

