
// Copyright (c) 2000 Sk
package TBPKT_UTILIDADES.TBPKT_VALOR_UNIDAD;

import sqlj.runtime.*;
import sqlj.runtime.ref.*;
import java.sql.*;
import TBPKT_UTILIDADES.TBPKT_CONEXIONBASEDATOS.*;

/**
 * A Sqlj class.
 * <P>
 * @author Skandia
 */
public class SQL_VALOR_UNIDAD_CC extends Object {

  /**
   * Constructor
   */
  public static double[] TBF_CALCULO_VALOR_UNIDAD
    ( String v_fecha_contrato, String v_fecha_unidad, String v_contrato, String v_producto, boolean v_update, int v_retiro)
  {
    Date              v_max_fecha;
    double            v_saldo_contrato = 0;
    double            v_saldo_unidades = 1;
    double            v_valor_unidad   = 0;
    double            v_saldo_unidad_max_fec;
    double            v_cuenta_conting_max_fec;
    int               v_cod_err        = 0;
    String            v_men_err        = " ";
    String            v_fecha;
    String[]          v_valusu;
    double            v_salida[] = new double[3];
    /*[SO_396] Se realiza modificación de llamado por ser método estático TBFL_ValidarUsuario de la clase TBCL_Validacion, no es necesaria la instancia nueva*/ 
 //TBCL_Validacion i_valusu = new TBCL_Validacion(); 
 //TBCL_Validacion  i_valusu = new TBCL_Validacion()

    try{
      //Conexion con la base de datos
      v_valusu = new String[3];
      v_valusu = TBCL_Validacion.TBFL_ValidarUsuario();
      DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
      Connection t_tax =DriverManager.getConnection(v_valusu[0],v_valusu[1],v_valusu[2]);
      DefaultContext.setDefaultContext(new DefaultContext( v_valusu[0],v_valusu[1],v_valusu[2],false));

      /* Borrar los saldos mayores a la fecha de contrato enviada existentes en
         TBSALDOS para evitar los caLculos erroneos originados por los BACK DATE */

      #sql {call TBPBD_DEL_TBSALDOS(:v_fecha_contrato,:v_contrato,:v_producto, :INOUT v_cod_err, :INOUT v_men_err)};
      if (v_cod_err != 0)
      {
        v_salida[0] = 0;
        v_salida[1] = 0;
        v_salida[2] = v_cod_err;
      }//Error al borrar los saldos existentes en tbsaldos
      else
      {
        //Llamado a un metodo que devuelve el saldo de contrato
        try
        {
          //TBCL_AS400 ias400 = new TBCL_AS400();
          //v_saldo_contrato = ias400.TBF_SALDO_CONTRATO(v_contrato, v_fecha_contrato);

          /*
          Modificacion:
          Se añade el procedimiento de invocacion a un procedimiento del AS400
          */
          CallableStatement cs = t_tax.prepareCall ( "{? = call TBCL_AS400.TBF_SALDO_CONTRATO(?,?)}");
          cs.registerOutParameter(1,Types.DOUBLE);
          cs.setString(2,v_contrato);
          cs.setString(3,v_fecha_contrato);
          cs.executeUpdate();
          v_saldo_contrato = cs.getDouble(1);
          cs.close();
          t_tax.close();
          /* Final de la modificacion */
    System.out.println("SALDO DEL CONTRATO" + v_contrato+" es = " + v_saldo_contrato);
          if (v_saldo_contrato == -1.0)
             v_cod_err = -1;
          else if(v_saldo_contrato == -2.0)
                v_cod_err = -2;
        }catch(Exception e)
        {
        v_cod_err = -2;   
        System.out.println("ERROR EN CALCULO DE VALOR DE UNIDAD :" + e);
        }
        //Si ocurre un error al calcular el saldo del contrato en el AS400
        //retornar -1 y no seguir proceso
        if (v_cod_err == 0)
        {
          //Si el saldo del contrato calculado es negativo o cero retornar un error
          //Sino calcular el saldo de unidades
          if (v_saldo_contrato > 0 )
          {
            //Llamado a procedimiento que devuelve el saldo de unidades para
            //la fecha, contrato y producto deseado calculando primero los
            //ultimos saldos existentes en TBSALDOS
            //Seleccionar los saldos de unidades y cuenta contingente a la maxima
            //fecha en TBSALDOS
            #sql {call TBPBD_ULTIMOS_SALDOS(:v_fecha_contrato,             :v_contrato,
                                            :v_producto,                   :OUT v_max_fecha,
                                            :OUT v_saldo_unidad_max_fec,   :OUT v_cuenta_conting_max_fec,
                                            :INOUT v_cod_err,              :INOUT v_men_err)};
            //Si hubo error al calcular los ultimos saldos no seguir proceso
            //y retornar el codigo de error sino seguir con el calculo de unidades a la fecha deseada
            if (v_cod_err == 0){
              #sql v_saldo_unidades = {values (TBFBD_CALC_SALDO_UNIDAD_P(:v_fecha_unidad,
                                                                         :v_contrato,
                                                                         :v_producto,
                                                                         :v_max_fecha,
                                                                         :v_saldo_unidad_max_fec,
                                                                         :INOUT v_cod_err,
                                                                         :INOUT v_men_err))};
              //Si no hubo error al calcular el saldo de unidades seguir proceso
              //Sino retornar el codigo de error
              if (v_cod_err == 0){
                //Si el saldo de unidades es menor o igual a cero retornar error
                if (v_saldo_unidades > 0 ){
                  v_valor_unidad = v_saldo_contrato/v_saldo_unidades;
                  v_salida[0] = v_valor_unidad;//Valor de la Unidad
                  v_salida[1] = v_saldo_contrato;//Saldo del Contrato
                  v_salida[2] = 0;//Codigo de error
                  //Si v_update = true llamar al proc de insercion a TBSALDOS
                  if (v_update){
                    //Llama al procedimiento que inserta en la tabla TBSALDOS
                    #sql {call TBPBD_INS_TBSALDOS(:v_producto,       :v_contrato,
                                                  :v_fecha_contrato, :v_saldo_contrato,
                                                  null,              null,
                                                  :v_saldo_unidades, :v_valor_unidad,
                                                  :INOUT v_cod_err,  :INOUT v_men_err)};
                    //Si este saldo existe en la tabla TBSALDOS se actualiza la tabla
                    if (v_cod_err == -0001){
                      #sql { UPDATE  tbsaldos
                               SET   sal_saldo_contrato            = :v_saldo_contrato,
                                     sal_saldo_contrato_disponible = null,
                                     sal_saldo_cuenta_contingente  = null ,
                                     sal_saldo_unidades            = :v_saldo_unidades,
                                     sal_valor_unidad              = :v_valor_unidad
                               WHERE sal_con_pro_codigo            = :v_producto
                                 AND sal_con_numero                = :v_contrato
                                 AND TRUNC(sal_fecha)              = TO_DATE(:v_fecha_contrato)};
                      v_cod_err = 0;
                    }// fin si error de constraint
                  }// fin si quiere actualizar
                }//Saldo de unidades es mayor a cero
                else{
                  v_salida[0] = 0;//Valor de la Unidad
                  v_salida[1] = v_saldo_contrato;//Saldo del Contrato
                  v_salida[2] = -5;//Codigo de error

                }//Saldo de unidades es menor a cero
              }// fin si no hubo error al calcular saldo de unidades
              else{
                v_salida[0] = 0;//Valor de la Unidad
                v_salida[1] = 0;//Saldo del Contrato
                v_salida[2] = v_cod_err;//Codigo de error

              }//hubo error al calcular saldos de unidades
            }//No hubo error al calcular los saldos a maxima fecha
            else{
              v_salida[0] = 0;//Valor de la Unidad
              v_salida[1] = 0;//Saldo del Contrato
              v_salida[2] = v_cod_err;//Codigo de error

            }//Hubo error al calcular los saldos a maxima fecha
          }//Saldo del contrato es positivo
          else{
            v_salida[0] = 0;//Valor de la Unidad
            v_salida[1] = 0;//Saldo del Contrato
            v_salida[2] = -3;//Codigo de error

          }//Saldo del contrato es negativo o igual a cero retornar error
        }//No hubo error al calcular saldo del contrato en el AS400
        else
        {
          v_salida[0] = 0;//Valor de la Unidad
          v_salida[1] = 0;//Saldo del Contrato
          v_salida[2] = v_cod_err;//Codigo de error
        }//Hubo error al calcular saldo del contrato en el AS400
      }//No error al borrar los saldos existentes en tbsaldos
      if (v_cod_err == 0){
        #sql {COMMIT};
      }
      else{
        #sql {ROLLBACK};
      }

    }catch(Exception e){
       v_salida[0] = 0;
       v_salida[1] = 0;
       v_salida[2] = -4;
       System.out.println("Error en sql_valor_unidad = " + e.toString());
       
      return v_salida;
   }
    return v_salida;
  }//fin metodo
}

